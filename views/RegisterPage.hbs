<div id="leftContainer">
    <a href="/" role="button" class="btn btn-outline-primary px-2 py-2 mx-4 my-4">
        <i class="fa-solid fa-house fs-5"></i>
    </a>
    <p class="fs-1 fw-bold row col-11 mb-0 d-flex justify-content-center">HPQL</p>
    <div class="sampleIMG row col-11">
        <img src="/assets/img/loginIMG.svg" alt="travelStoryset">
    </div>
</div>
<div id="rightContainer" class="d-flex flex-column justify-content-center">
    <p class="fs-2 fw-bold text-uppercase mt-4 d-flex justify-content-center">Đăng Ký</p>
    <form id="registerForm" action="/register" method="POST">
        <div class="inputGroup row mt-2 d-flex justify-content-center" id="emailGroup">
            <i class="fa-solid fa-envelope col-1"></i>
            <div class="form-floating col-9">
                <input type="email" class="form-control" id="email" name="email" placeholder="name@example.com"
                    required>
                <label for="email" class="ps-4 fw-bold">Email:</label>
            </div>
            <div class="col-1"></div>
        </div>
        <div class="inputGroup row mt-3 d-flex justify-content-center" id="nameGroup">
            <i class="fa-solid fa-user col-1"></i>
            <div class="form-floating col-9">
                <input type="text" class="form-control" id="name" name="name" placeholder="Name" required>
                <label for="repass" class="ps-4 fw-bold">Họ tên:</label>
            </div>
            <div class="col-1"></div>
        </div>
        <div class="inputGroup row mt-3 d-flex justify-content-center" id="passGroup">
            <i class="fa-solid fa-lock col-1"></i>
            <div class="form-floating col-9">
                <input type="password" class="form-control" id="pass" name="pass" placeholder="Password" required>
                <label for="pass" class="ps-4 fw-bold">Mật khẩu:</label>
            </div>
            <div class="col-1"></div>
        </div>
        <div class="inputGroup row mt-3 d-flex justify-content-center" id="repassGroup">
            <div class="form-floating col-9">
                <input type="password" class="form-control" id="repass" name="repass" placeholder="Re-Password"
                    required>
                <label for="repass" class="ps-4 fw-bold">Xác nhận mật khẩu:</label>
            </div>
        </div>
        <div class="inputGroup row mt-3 d-flex justify-content-center" id="emailGroup">
            <i class="fa-solid fa-envelope col-1"></i>
            <div class="form-floating col-9">
                <input type="text" class="form-control" id="phonenum" name="phonenum" placeholder="*********" required>
                <label for="phonenum" class="ps-4 fw-bold">Số điện thoại:</label>
            </div>
            <div class="col-1"></div>
        </div>
        <div id="btn-group" class="my-4 d-flex flex-column align-items-center">
            <button type="submit" class="btn btn-primary mb-3 row col-5 text-uppercase fw-bold" id="login-btn">Đăng
                Ký</button>
            <a href="/login" class="mb-3 row col-7 col-md-6 d-flex justify-content-center">Đã có tài khoản? Đăng
                nhập ngay</a>
        </div>
    </form>
    <svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
        <symbol id="check-circle-fill" fill="currentColor" viewBox="0 0 16 16">
            <path
                d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z" />
        </symbol>
        <symbol id="exclamation-triangle-fill" fill="currentColor" viewBox="0 0 16 16">
            <path
                d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z" />
        </symbol>
    </svg>

    <div class="alert alertS alert-success d-flex align-items-center" role="alert">
        <svg class="bi flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Success:">
            <use xlink:href="#check-circle-fill" />
        </svg>
        <div id="noticeS">
            An example success alert with an icon
        </div>
    </div>

    <div class="alert alertF alert-danger d-flex align-items-center" role="alert">
        <svg class="bi flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Danger:">
            <use xlink:href="#exclamation-triangle-fill" />
        </svg>
        <div id="noticeF">
            My alert
        </div>
    </div>
</div>

<script>
    const myAlertS = document.getElementById("noticeS");
    const myAlertF = document.getElementById("noticeF");

    const noticeS = document.getElementsByClassName("alertS");
    const noticeF = document.getElementsByClassName("alertF");

    //const inputCurrentPass = document.getElementsByName("currentPassword");
    //const inputNewPass = document.getElementsByName("newPassword");
    //const inputConfirmPass = document.getElementsByName("confirmPassword");

    document.forms['registerForm'].addEventListener('submit', (event) => {
        event.preventDefault();
        // TODO do something here to show user that form is being submitted
        fetch(event.target.action, {
            method: 'POST',
            body: new URLSearchParams(new FormData(event.target)) // event.target is the form
        }).then((response) => {
            if (!response.ok) {
                throw new Error(`HTTP error! Status: ${response.status}`);
            }
            return response.json(); // or response.text() or whatever the server sends
        }).then((body) => {
            if (body.sign === "1") {
                myAlertS.innerHTML = body.result;
                noticeS[0].setAttribute('style', 'visibility: visible !important');
                setTimeout(() => noticeS[0].setAttribute('style', 'visibility: hidden !important'), 3000);

                window.location.href = '/login';
            }
            else {
                myAlertF.innerHTML = body.result;
                noticeF[0].setAttribute('style', 'visibility: visible !important');
                setTimeout(() => noticeF[0].setAttribute('style', 'visibility: hidden !important'), 3000);
            }

            // TODO handle body
        }).catch((error) => {
            // TODO handle error
        });
    });

</script>